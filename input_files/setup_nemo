#!/bin/bash
# Lightweight script to set up NEMO
 
display_usage() { 
   echo
   echo "  Auto-Config: NEMO in Singularity"
   echo "  ***************************************"
   echo
   echo "  usage: ${0##*/} -w path_to_install_nemo -x path_to_intall_xios -s path_to_repo"
   echo "                  -m machine -v version -c compiler"
   echo
   echo "  flags:  -w full path to where nemo will be installed"
   echo "          -x full path to where xios will be installed"
   echo "          -s full path to where AMM7 repository resides"
   echo "          -m machine on which to compile code"
   echo "          -v which version of NEMO to check out"
   echo "          -c which compiler to use"
   echo
   exit 1
	} 
# if less than three arguments supplied, display usage 
	if [  $# -le 11 ] 
	then 
		display_usage
		exit 1
	fi 
# if less than two arguments supplied, display usage 
	if [  $# -ge 13 ] 
	then 
		display_usage
		exit 1
	fi 
# check whether user had supplied -h or --help . If yes display usage 
	if [[ ( $# == "--help") ||  $# == "-h" ]] 
	then 
		display_usage
		exit 0
	fi 

while getopts w:x:s:m:v:c: option
  do
  case "${option}"
  in
  w) export WORK_DIR=${OPTARG};;
  x) export XIOS_DIR=${OPTARG};;
  s) export REPO_DIR=${OPTARG};;
  m) export HPC_TARG=${OPTARG};;
  v) export NEMO_VER=${OPTARG};;
  c) export COMPILER=${OPTARG};;
  esac
done

if [ ${WORK_DIR:0:1} != "/" ]; then
  echo "WORK_DIR must use full path"
  exit 1
fi

if [ ${XIOS_DIR:0:1} != "/" ]; then
  echo "XIOS_DIR must use full path"
  exit 1
fi

if [ ${REPO_DIR:0:1} != "/" ]; then
  echo "REPO_DIR must use full path"
  exit 1
fi

# Change to some working directory of choice
if [ ! -d "$WORK_DIR" ]; then
  mkdir $WORK_DIR
fi
cd $WORK_DIR

echo "Making sure that the correct modules are loaded"

git clone -b main  git@forge.nemo-ocean.eu:nemo/nemo.git nemo
svn checkout  http://forge.ipsl.jussieu.fr/ioserver/svn/XIOS/trunk xios

cd xios

cp /input_files/arch/xios/arch* ./arch

echo "Compiling xios"
./make_xios --full --prod --arch singularity --netcdf_lib netcdf4_par -j 8

# Let's update the path to xios
export XIOS_DIR=$XIOS_DIR/xios

[ -f $XIOS_DIR/bin/xios_server.exe ] || exit 1

cd $WORK_DIR/nemo
cp /input_files/arch/nemo/arch* ./arch

cd sette

mkdir NEMO_VALIDATION

echo "Compiling SETTE"
mkdir NEMO_VALIDATION
cp /input_files/param.cfg ./
mkdir FORCING/SETTE_inputs
./sette_fetch_inputs.sh
./sette.sh -cux COMPILE
